[{"D:\\SEGP\\staff\\src\\index.js":"1","D:\\SEGP\\staff\\src\\reportWebVitals.js":"2","D:\\SEGP\\staff\\src\\component\\App.js":"3","D:\\SEGP\\staff\\src\\component\\Home.js":"4","D:\\SEGP\\staff\\src\\sharedComponent\\Header.js":"5","D:\\SEGP\\staff\\src\\component\\LoginPage.js":"6","D:\\SEGP\\staff\\src\\api\\api.js":"7","D:\\SEGP\\staff\\src\\auth\\ProtectedRoute.js":"8","D:\\SEGP\\staff\\src\\component\\NotFound.js":"9","D:\\SEGP\\staff\\src\\component\\Settings.js":"10","D:\\SEGP\\staff\\src\\hooks\\FullPageLoader.jsx":"11","D:\\SEGP\\staff\\src\\component\\ManageStaff.js":"12","D:\\SEGP\\staff\\src\\component\\NotAuthorized.js":"13","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageVenueSportComplex.js":"14","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageDateSportComplex.js":"15","D:\\SEGP\\staff\\src\\component\\Room\\ManageVenueRoom.js":"16","D:\\SEGP\\staff\\src\\component\\Room\\ManageDateRoom.js":"17","D:\\SEGP\\staff\\src\\component\\Room\\ManageSubcategoryRoom.js":"18","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageSubcategorySportComplex.js":"19"},{"size":600,"mtime":1608724465959,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1608560160593,"results":"22","hashOfConfig":"21"},{"size":2301,"mtime":1617358242117,"results":"23","hashOfConfig":"21"},{"size":3810,"mtime":1612968142729,"results":"24","hashOfConfig":"21"},{"size":2829,"mtime":1617358309831,"results":"25","hashOfConfig":"21"},{"size":2743,"mtime":1612535388433,"results":"26","hashOfConfig":"21"},{"size":1597,"mtime":1614503924834,"results":"27","hashOfConfig":"21"},{"size":2742,"mtime":1613917270603,"results":"28","hashOfConfig":"21"},{"size":124,"mtime":1612535388434,"results":"29","hashOfConfig":"21"},{"size":6059,"mtime":1617362231717,"results":"30","hashOfConfig":"21"},{"size":450,"mtime":1612535388437,"results":"31","hashOfConfig":"21"},{"size":6445,"mtime":1613747219335,"results":"32","hashOfConfig":"21"},{"size":132,"mtime":1613753688626,"results":"33","hashOfConfig":"21"},{"size":7445,"mtime":1617358035547,"results":"34","hashOfConfig":"21"},{"size":8839,"mtime":1615482834772,"results":"35","hashOfConfig":"21"},{"size":7312,"mtime":1617358166479,"results":"36","hashOfConfig":"21"},{"size":8686,"mtime":1615483472754,"results":"37","hashOfConfig":"21"},{"size":7726,"mtime":1617358755691,"results":"38","hashOfConfig":"21"},{"size":7892,"mtime":1617358831653,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kygz4s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\SEGP\\staff\\src\\index.js",[],["81","82"],"D:\\SEGP\\staff\\src\\reportWebVitals.js",[],"D:\\SEGP\\staff\\src\\component\\App.js",[],"D:\\SEGP\\staff\\src\\component\\Home.js",[],"D:\\SEGP\\staff\\src\\sharedComponent\\Header.js",[],"D:\\SEGP\\staff\\src\\component\\LoginPage.js",["83"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { api } from \"../api/api\";\r\nimport \"../css/Login.css\";\r\nimport { render } from \"@testing-library/react\";\r\nimport Cookies from \"js-cookie\";\r\nimport FullPageLoader from \"../hooks/FullPageLoader\"\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      username: \"\",\r\n      loading: true,\r\n      password: \"\",\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  setPassword(value) {\r\n    this.setState({ password: value });\r\n  }\r\n\r\n  setUsername(value) {\r\n    this.setState({ username: value });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    await api\r\n      .post(\"/auth/loginUser\", {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n      .then((res) => {\r\n        Cookies.set(\"accessToken\", res.data.accessToken, { expires: 1 });\r\n        Cookies.set(\"refreshToken\", res.data.refreshToken, { expires: 1 });\r\n        this.state.history.replace(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) {\r\n          this.setState({error: 'Error: Network Error'})\r\n      } else {\r\n        this.setState({error: err.response.data.error})\r\n      }\r\n    });\r\n    this.setState({ loading: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        {this.state.loading && <FullPageLoader />}\r\n        <Form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"username\"\r\n              value={this.state.username}\r\n              onChange={(e) => this.setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) => this.setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {<p style={{color: 'red', alignSelf: 'center'}}>{this.state.error}</p>}\r\n          <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","D:\\SEGP\\staff\\src\\api\\api.js",[],"D:\\SEGP\\staff\\src\\auth\\ProtectedRoute.js",["84","85"],"import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport {api} from \"../api/api\";\r\n\r\nfunction ProtectedRoute({ component: Component, authed, checkAdmin, ...rest }) {\r\n  const [auth, setAuth] = useState(false);\r\n  const [isTokenValidated, setIsTokenValidated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let accessToken = Cookies.get(\"accessToken\");\r\n    let refreshToken = Cookies.get(\"refreshToken\");\r\n    if (accessToken) {\r\n      Promise.all([\r\n        api\r\n        .get(\"/auth/verifyUser\", {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            console.log(res.data)\r\n            setAuth(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n            var status \r\n            if(err.response){\r\n                status = err.response.status\r\n            }\r\n          if (status === 401) {\r\n            api\r\n              .get(\"/auth/token\", {\r\n                params: {\r\n                  refreshToken: refreshToken,\r\n                },\r\n              })\r\n              .then((res) => {\r\n                Cookies.set(\"accessToken\", res.data.accessToken);\r\n                setAuth(true);\r\n              })\r\n              .catch((err) => {\r\n                Cookies.remove(\"accessToken\");\r\n                Cookies.remove(\"refreshToken\");\r\n                setAuth(false);\r\n              });\r\n          } else {\r\n            setAuth(false);\r\n          }\r\n        }),\r\n        \r\n      api\r\n      .get(\"/user\")\r\n      .then((res) => {\r\n        const role = res.data.user.role\r\n        console.log(res.data)\r\n        if(role === \"admin\"){\r\n          setIsAdmin(true)\r\n        } else {\r\n          setIsAdmin(false)\r\n        }\r\n      }).then(() => setFetched(true))\r\n      .catch((err) => console.log(err))\r\n      ]).then(() => setIsTokenValidated(true))\r\n    } else {\r\n      setIsTokenValidated(true); // in case there is no token\r\n    }\r\n  }, []);\r\n\r\n  if (!isTokenValidated) return <div />;\r\n  console.log(checkAdmin)\r\n  console.log(isAdmin)\r\n  if(checkAdmin){\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          !auth ? <Redirect to=\"/login\" /> : isAdmin ? <Component {...props} /> : <Redirect to=\"/notAuthorized\" />\r\n        }\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          auth ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default ProtectedRoute;\r\n","D:\\SEGP\\staff\\src\\component\\NotFound.js",[],"D:\\SEGP\\staff\\src\\component\\Settings.js",[],"D:\\SEGP\\staff\\src\\hooks\\FullPageLoader.jsx",[],"D:\\SEGP\\staff\\src\\component\\ManageStaff.js",[],"D:\\SEGP\\staff\\src\\component\\NotAuthorized.js",[],"D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageVenueSportComplex.js",[],"D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageDateSportComplex.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageVenueRoom.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageDateRoom.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageSubcategoryRoom.js",["86","87"],"D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageSubcategorySportComplex.js",["88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":17},{"ruleId":"94","severity":1,"message":"100","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":11},{"ruleId":"94","severity":1,"message":"101","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":11},{"ruleId":"94","severity":1,"message":"100","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":11},{"ruleId":"94","severity":1,"message":"101","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":11},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'fetched' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]