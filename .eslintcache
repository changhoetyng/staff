[{"D:\\SEGP\\staff\\src\\index.js":"1","D:\\SEGP\\staff\\src\\reportWebVitals.js":"2","D:\\SEGP\\staff\\src\\component\\App.js":"3","D:\\SEGP\\staff\\src\\component\\Home.js":"4","D:\\SEGP\\staff\\src\\sharedComponent\\Header.js":"5","D:\\SEGP\\staff\\src\\component\\LoginPage.js":"6","D:\\SEGP\\staff\\src\\api\\api.js":"7","D:\\SEGP\\staff\\src\\auth\\ProtectedRoute.js":"8","D:\\SEGP\\staff\\src\\component\\NotFound.js":"9","D:\\SEGP\\staff\\src\\component\\Settings.js":"10","D:\\SEGP\\staff\\src\\hooks\\FullPageLoader.jsx":"11","D:\\SEGP\\staff\\src\\component\\ManageStaff.js":"12","D:\\SEGP\\staff\\src\\component\\NotAuthorized.js":"13","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageVenueSportComplex.js":"14","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageDateSportComplex.js":"15","D:\\SEGP\\staff\\src\\component\\Room\\ManageVenueRoom.js":"16","D:\\SEGP\\staff\\src\\component\\Room\\ManageDateRoom.js":"17","D:\\SEGP\\staff\\src\\component\\Room\\ManageSubcategoryRoom.js":"18","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageSubcategorySportComplex.js":"19"},{"size":600,"mtime":1608724465959,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1608560160593,"results":"22","hashOfConfig":"21"},{"size":2301,"mtime":1617358242117,"results":"23","hashOfConfig":"21"},{"size":3810,"mtime":1612968142729,"results":"24","hashOfConfig":"21"},{"size":2829,"mtime":1617358309831,"results":"25","hashOfConfig":"21"},{"size":2776,"mtime":1617560588495,"results":"26","hashOfConfig":"21"},{"size":1597,"mtime":1614503924834,"results":"27","hashOfConfig":"21"},{"size":2742,"mtime":1613917270603,"results":"28","hashOfConfig":"21"},{"size":124,"mtime":1612535388434,"results":"29","hashOfConfig":"21"},{"size":6440,"mtime":1618988453980,"results":"30","hashOfConfig":"21"},{"size":450,"mtime":1612535388437,"results":"31","hashOfConfig":"21"},{"size":6485,"mtime":1618986087205,"results":"32","hashOfConfig":"21"},{"size":132,"mtime":1613753688626,"results":"33","hashOfConfig":"21"},{"size":7502,"mtime":1618988891283,"results":"34","hashOfConfig":"21"},{"size":8885,"mtime":1617611342483,"results":"35","hashOfConfig":"21"},{"size":7369,"mtime":1618988881299,"results":"36","hashOfConfig":"21"},{"size":8697,"mtime":1617625487978,"results":"37","hashOfConfig":"21"},{"size":7765,"mtime":1617625564431,"results":"38","hashOfConfig":"21"},{"size":7931,"mtime":1617611827724,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kygz4s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"D:\\SEGP\\staff\\src\\index.js",[],["83","84"],"D:\\SEGP\\staff\\src\\reportWebVitals.js",[],"D:\\SEGP\\staff\\src\\component\\App.js",[],"D:\\SEGP\\staff\\src\\component\\Home.js",[],"D:\\SEGP\\staff\\src\\sharedComponent\\Header.js",[],"D:\\SEGP\\staff\\src\\component\\LoginPage.js",["85"],"import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { api } from \"../api/api\";\r\nimport \"../css/Login.css\";\r\nimport { render } from \"@testing-library/react\";\r\nimport Cookies from \"js-cookie\";\r\nimport FullPageLoader from \"../hooks/FullPageLoader\"\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      username: \"\",\r\n      loading: true,\r\n      password: \"\",\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  setPassword(value) {\r\n    this.setState({ password: value });\r\n  }\r\n\r\n  setUsername(value) {\r\n    this.setState({ username: value });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    await api\r\n      .post(\"/auth/loginUser\", {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n      .then((res) => {\r\n        Cookies.set(\"accessToken\", res.data.accessToken, { expires: 1 });\r\n        Cookies.set(\"refreshToken\", res.data.refreshToken, { expires: 1 });\r\n        this.state.history.replace(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        if (!err.response) {\r\n          this.setState({error: 'Error: Network Error'})\r\n      } else {\r\n        this.setState({error: err.response.data.error})\r\n      }\r\n    });\r\n    this.setState({ loading: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        {this.state.loading && <FullPageLoader />}\r\n        <Form id=\"#loginForm\" onSubmit={(e) => this.handleSubmit(e)}>\r\n          <Form.Group size=\"lg\" controlId=\"email\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              autoFocus\r\n              type=\"username\"\r\n              value={this.state.username}\r\n              onChange={(e) => this.setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={(e) => this.setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {<p style={{color: 'red', alignSelf: 'center'}}>{this.state.error}</p>}\r\n          <Button block size=\"lg\" id=\"loginButton\" type=\"submit\" disabled={!this.validateForm()}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","D:\\SEGP\\staff\\src\\api\\api.js",[],"D:\\SEGP\\staff\\src\\auth\\ProtectedRoute.js",["86","87"],"import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport {api} from \"../api/api\";\r\n\r\nfunction ProtectedRoute({ component: Component, authed, checkAdmin, ...rest }) {\r\n  const [auth, setAuth] = useState(false);\r\n  const [isTokenValidated, setIsTokenValidated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [fetched, setFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let accessToken = Cookies.get(\"accessToken\");\r\n    let refreshToken = Cookies.get(\"refreshToken\");\r\n    if (accessToken) {\r\n      Promise.all([\r\n        api\r\n        .get(\"/auth/verifyUser\", {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            console.log(res.data)\r\n            setAuth(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n            var status \r\n            if(err.response){\r\n                status = err.response.status\r\n            }\r\n          if (status === 401) {\r\n            api\r\n              .get(\"/auth/token\", {\r\n                params: {\r\n                  refreshToken: refreshToken,\r\n                },\r\n              })\r\n              .then((res) => {\r\n                Cookies.set(\"accessToken\", res.data.accessToken);\r\n                setAuth(true);\r\n              })\r\n              .catch((err) => {\r\n                Cookies.remove(\"accessToken\");\r\n                Cookies.remove(\"refreshToken\");\r\n                setAuth(false);\r\n              });\r\n          } else {\r\n            setAuth(false);\r\n          }\r\n        }),\r\n        \r\n      api\r\n      .get(\"/user\")\r\n      .then((res) => {\r\n        const role = res.data.user.role\r\n        console.log(res.data)\r\n        if(role === \"admin\"){\r\n          setIsAdmin(true)\r\n        } else {\r\n          setIsAdmin(false)\r\n        }\r\n      }).then(() => setFetched(true))\r\n      .catch((err) => console.log(err))\r\n      ]).then(() => setIsTokenValidated(true))\r\n    } else {\r\n      setIsTokenValidated(true); // in case there is no token\r\n    }\r\n  }, []);\r\n\r\n  if (!isTokenValidated) return <div />;\r\n  console.log(checkAdmin)\r\n  console.log(isAdmin)\r\n  if(checkAdmin){\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          !auth ? <Redirect to=\"/login\" /> : isAdmin ? <Component {...props} /> : <Redirect to=\"/notAuthorized\" />\r\n        }\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          auth ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default ProtectedRoute;\r\n","D:\\SEGP\\staff\\src\\component\\NotFound.js",[],"D:\\SEGP\\staff\\src\\component\\Settings.js",[],"D:\\SEGP\\staff\\src\\hooks\\FullPageLoader.jsx",[],"D:\\SEGP\\staff\\src\\component\\ManageStaff.js",[],"D:\\SEGP\\staff\\src\\component\\NotAuthorized.js",[],"D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageVenueSportComplex.js",[],"D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageDateSportComplex.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageVenueRoom.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageDateRoom.js",[],"D:\\SEGP\\staff\\src\\component\\Room\\ManageSubcategoryRoom.js",["88","89"],"import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport FullPageLoader from \"../../hooks/FullPageLoader\";\r\nimport Header from \"../../sharedComponent/Header\";\r\nimport \"../../css/Setting.css\";\r\nimport { api } from \"../../api/api\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { QRCode } from \"react-qr-svg\";\r\n\r\nclass ManageSubcategoryRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      currentSelection: null,\r\n      currentRoomId: null,\r\n      subCategory: \"\",\r\n      data: [],\r\n      loading: false,\r\n      qrCodeModal: false,\r\n      selectedQR: \"\",\r\n      isAdmin: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    await api\r\n      .get(\"/user\")\r\n      .then((res) => {\r\n        const role = res.data.user.role;\r\n        if (role === \"admin\") {\r\n          this.setState({ isAdmin: true });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    await api\r\n      .get(\"/room/getRoom\")\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        this.setState({ data: res.data.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  dropdownSelection(selected, id) {\r\n    this.setState({ currentSelection: selected, currentRoomId: id });\r\n  }\r\n\r\n  renderRoomButton() {\r\n    return (\r\n      <DropdownButton\r\n        id=\"dropdown-item-button\"\r\n        title={\r\n          this.state.currentSelection\r\n            ? this.state.currentSelection\r\n            : \"Select a Room\"\r\n        }\r\n      >\r\n        {this.state.data.map((v, i) => {\r\n          return (\r\n            <Dropdown.Item\r\n              key={i}\r\n              as=\"button\"\r\n              onSelect={() => this.dropdownSelection(v.room, v.roomId)}\r\n            >\r\n              {v.room}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    );\r\n  }\r\n\r\n  openQrCode(sub) {\r\n    this.setState({ selectedQR: sub, qrCodeModal: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ qrCodeModal: false });\r\n  }\r\n\r\n  renderTableContent() {\r\n    let selectedRoom = this.state.data.find(\r\n      (v) => v.roomId === this.state.currentRoomId\r\n    );\r\n    let subCategory = selectedRoom ? selectedRoom.subCategory : [];\r\n    return (\r\n      <div className=\"row\">\r\n        {subCategory &&\r\n          subCategory.map((sub, i) => {\r\n            return (\r\n              <div className=\"col\" key={i}>\r\n                <Card\r\n                  style={{\r\n                    width: \"19rem\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                    paddingRight: 0,\r\n                  }}\r\n                >\r\n                  <Card.Body>\r\n                    <Card.Title>{sub.subName}</Card.Title>\r\n                    <Card.Text>\r\n                      {sub.currentUser ? (\r\n                        <p>Current User: {sub.currentUser}</p>\r\n                      ) : (\r\n                        <p>Current User: Not occupied</p>\r\n                      )}\r\n                    </Card.Text>\r\n                    <Card.Link\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        this.openQrCode(sub);\r\n                      }}\r\n                    >\r\n                      QR Code\r\n                    </Card.Link>\r\n                    { this.state.isAdmin &&\r\n                    <Card.Link\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        this.removesubcategory(sub._id);\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </Card.Link>\r\n                    }\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async removesubcategory(subId) {\r\n    this.setState({ loading: true });\r\n\r\n    await api\r\n      .patch(\"/room/deletesub\", {\r\n        roomId: this.state.currentRoomId,\r\n        subCategoryId: subId,\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n        console.log(err);\r\n      });\r\n    this.componentDidMount();\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  async addsubcategory() {\r\n    this.setState({ loading: true });\r\n\r\n    await api\r\n      .patch(\"/room/addSub\", {\r\n        roomId: this.state.currentRoomId,\r\n        subCategory: this.state.subCategory,\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n        console.log(err);\r\n      });\r\n    this.componentDidMount();\r\n    this.setState({ loading: false, subCategory: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading && <FullPageLoader />}\r\n        <Header history={this.state.history} />\r\n        <div className=\"container float-left non-printable\">\r\n          <h2 id=\"manageSubcategoryTitle\">Manage Subcategory</h2>\r\n\r\n          <div style={{ marginTop: 20 }}>\r\n            <h4 id=\"title\">Room</h4>\r\n            <div className=\"container float-left\">\r\n              <div className=\"row\" style={{ marginTop: 20 }}>\r\n                {this.renderRoomButton()}\r\n              </div>\r\n              <div className=\"row\" style={{ marginBottom: 20, marginTop: 20 }}>\r\n                {this.renderTableContent()}\r\n              </div>\r\n              { this.state.isAdmin &&\r\n              <div className=\"row,container float-left\">\r\n                <div className=\"row\">\r\n                  <p className=\"word\">Manage Subcategory:</p>\r\n                  <div className=\"col\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.subCategory}\r\n                      onChange={(e) =>\r\n                        this.setState({ subCategory: e.target.value })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <Button onClick={() => this.addsubcategory()}>Add</Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"non-printable\">\r\n          <Modal\r\n            show={this.state.qrCodeModal}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            onHide={() => this.handleClose()}\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title>QR Code</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div class=\"printable\">\r\n                <h2 style={{ textAlign: \"center\" }}>\r\n                  {this.state.currentSelection}\r\n                </h2>\r\n                <h4 style={{ textAlign: \"center\" }}>\r\n                  {this.state.selectedQR.subName}\r\n                </h4>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <QRCode\r\n                    level=\"Q\"\r\n                    style={{ width: 256 }}\r\n                    value={JSON.stringify({\r\n                      venueId: this.state.currentRoomId,\r\n                      subCategoryId: this.state.selectedQR._id,\r\n                    })}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => window.print()}>Print</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageSubcategoryRoom;\r\n","D:\\SEGP\\staff\\src\\component\\SportComplex\\ManageSubcategorySportComplex.js",["90","91"],"import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport FullPageLoader from \"../../hooks/FullPageLoader\";\r\nimport Header from \"../../sharedComponent/Header\";\r\nimport \"../../css/Setting.css\";\r\nimport { api } from \"../../api/api\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { QRCode } from \"react-qr-svg\";\r\n\r\nclass ManageSubcategorySportComplex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      currentSelection: null,\r\n      currentFacilityId: null,\r\n      subCategory: \"\",\r\n      data: [],\r\n      loading: false,\r\n      qrCodeModal: false,\r\n      selectedQR: \"\",\r\n      isAdmin: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await api\r\n      .get(\"/user\")\r\n      .then((res) => {\r\n        const role = res.data.user.role;\r\n        if (role === \"admin\") {\r\n          this.setState({ isAdmin: true });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    this.setState({ loading: true });\r\n    await api\r\n      .get(\"/sportComplex/getFacility\")\r\n      .then((res) => {\r\n        this.setState({ data: res.data.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  dropdownSelection(selected, id) {\r\n    this.setState({ currentSelection: selected, currentFacilityId: id });\r\n  }\r\n\r\n  openQrCode(sub) {\r\n    console.log(sub);\r\n    this.setState({ selectedQR: sub, qrCodeModal: true });\r\n  }\r\n\r\n  renderFacilityButton() {\r\n    return (\r\n      <DropdownButton\r\n        id=\"dropdown-item-button\"\r\n        title={\r\n          this.state.currentSelection\r\n            ? this.state.currentSelection\r\n            : \"Select a facility\"\r\n        }\r\n      >\r\n        {this.state.data.map((v, i) => {\r\n          return (\r\n            <Dropdown.Item\r\n              key={i}\r\n              as=\"button\"\r\n              onSelect={() => this.dropdownSelection(v.facility, v.facilityId)}\r\n            >\r\n              {v.facility}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    );\r\n  }\r\n\r\n  renderTableContent() {\r\n    let selectedFacility = this.state.data.find(\r\n      (v) => v.facilityId === this.state.currentFacilityId\r\n    );\r\n    let subCategory = selectedFacility ? selectedFacility.subCategory : [];\r\n    return (\r\n      <div className=\"row\">\r\n        {subCategory &&\r\n          subCategory.map((sub, i) => {\r\n            return (\r\n              <div className=\"col\" key={i}>\r\n                <Card\r\n                  style={{\r\n                    width: \"19rem\",\r\n                    whiteSpace: \"pre-wrap\",\r\n                    paddingRight: 0,\r\n                  }}\r\n                >\r\n                  <Card.Body>\r\n                    <Card.Title>{sub.subName}</Card.Title>\r\n                    <Card.Text>\r\n                      {sub.currentUser ? (\r\n                        <p>Current User: {sub.currentUser}</p>\r\n                      ) : (\r\n                        <p>Current User: Not occupied</p>\r\n                      )}\r\n                    </Card.Text>\r\n                    <Card.Link\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        this.openQrCode(sub);\r\n                      }}\r\n                    >\r\n                      QR Code\r\n                    </Card.Link>\r\n                    {this.state.isAdmin && (\r\n                      <Card.Link\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                          this.removesubcategory(sub._id);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Card.Link>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async removesubcategory(subId) {\r\n    this.setState({ loading: true });\r\n\r\n    await api\r\n      .patch(\"/sportComplex/deletesub\", {\r\n        facilityId: this.state.currentFacilityId,\r\n        subCategoryId: subId,\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n        console.log(err);\r\n      });\r\n    this.componentDidMount();\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  async addsubcategory() {\r\n    this.setState({ loading: true });\r\n\r\n    await api\r\n      .patch(\"/sportComplex/addSub\", {\r\n        facilityId: this.state.currentFacilityId,\r\n        subCategory: this.state.subCategory,\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n        console.log(err);\r\n      });\r\n    this.componentDidMount();\r\n    this.setState({ loading: false, subCategory: \"\" });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ qrCodeModal: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading && <FullPageLoader />}\r\n        <Header history={this.state.history} />\r\n        <div className=\"container float-left non-printable\">\r\n          <h2 id=\"manageSubcategoryTitle\">Manage Subcategory</h2>\r\n\r\n          <div style={{ marginTop: 20 }}>\r\n            <h4 id=\"title\">Sport Complex</h4>\r\n            <div className=\"container float-left\">\r\n              <div className=\"row\" style={{ marginTop: 20 }}>\r\n                {this.renderFacilityButton()}\r\n              </div>\r\n              <div className=\"row\" style={{ marginBottom: 20, marginTop: 20 }}>\r\n                {this.renderTableContent()}\r\n              </div>\r\n              {this.state.isAdmin && (\r\n                <div className=\"row,container float-left\">\r\n                  <div className=\"row\">\r\n                    <p className=\"word\">Manage Subcategory:</p>\r\n                    <div className=\"col\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={this.state.subCategory}\r\n                        onChange={(e) =>\r\n                          this.setState({ subCategory: e.target.value })\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Button onClick={() => this.addsubcategory()}>Add</Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"non-printable\">\r\n          <Modal\r\n            show={this.state.qrCodeModal}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            onHide={() => this.handleClose()}\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title>QR Code</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div class=\"printable\">\r\n                <h2 style={{ textAlign: \"center\" }}>\r\n                  {this.state.currentSelection}\r\n                </h2>\r\n                <h4 style={{ textAlign: \"center\" }}>\r\n                  {this.state.selectedQR.subName}\r\n                </h4>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <QRCode\r\n                    level=\"Q\"\r\n                    style={{ width: 256 }}\r\n                    value={JSON.stringify({\r\n                      venueId: this.state.currentFacilityId,\r\n                      subCategoryId: this.state.selectedQR._id,\r\n                    })}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={() => window.print()}>Print</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageSubcategorySportComplex;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":6,"column":10,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":23},{"ruleId":"96","severity":1,"message":"101","line":10,"column":10,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"102","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":11},{"ruleId":"96","severity":1,"message":"103","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":11},{"ruleId":"96","severity":1,"message":"102","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":11},{"ruleId":"96","severity":1,"message":"103","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":11},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'fetched' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]